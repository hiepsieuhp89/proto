syntax = "proto3";

package proto.v1;

option go_package = "github.com/shukubota/empowercloud-server/gen/proto/v1;v1";

message PatientQuestionnaire {
  int32 id = 1;
  int32 clinic_id = 2;
  int32 patient_id = 3;
  string name = 4;
  string title = 5;
  string content = 6;
  string signature_data = 7;
  string ocr_text = 8;
  string status = 9;
  MetadataFields metadata = 10;
  string created_at = 11;
  string updated_at = 12;
}

message MetadataFields {
  map<string, string> field_values = 1;
  map<string, QuestionnairePosition> positions = 2;
}

message QuestionnairePosition {
  int32 x = 1;
  int32 y = 2;
}

message ListPatientQuestionnairesRequest {
  int32 clinic_id = 1;
  int32 patient_id = 2;
  string keyword = 3;
  int32 page = 4;
  int32 size = 5;
}

message ListPatientQuestionnairesResponse {
  repeated PatientQuestionnaire questionnaires = 1;
  int32 total = 2;
  int32 current_page = 3;
  int32 size = 4;
}

message GetPatientQuestionnaireRequest {
  int32 id = 1;
}

message GetPatientQuestionnaireResponse {
  PatientQuestionnaire questionnaire = 1;
}

message StorePatientQuestionnaireRequest {
  int32 clinic_id = 1;
  int32 patient_id = 2;
  string name = 3;
  string title = 4;
  string content = 5;
  string signature_data = 6;
  string ocr_text = 7;
  string status = 8;
  MetadataFields metadata = 9;
}

message StorePatientQuestionnaireResponse {
  int32 id = 1;
}

message UpdatePatientQuestionnaireRequest {
  int32 id = 1;
  string name = 2;
  string title = 3;
  string content = 4;
  string signature_data = 5;
  string ocr_text = 6;
  string status = 7;
  MetadataFields metadata = 8;
}

message UpdatePatientQuestionnaireResponse {
  PatientQuestionnaire questionnaire = 1;
}

message DeletePatientQuestionnaireRequest {
  int32 id = 1;
}

message DeletePatientQuestionnaireResponse {
}

service PatientQuestionnaireService {
  rpc ListPatientQuestionnaires(ListPatientQuestionnairesRequest) returns (ListPatientQuestionnairesResponse);
  rpc GetPatientQuestionnaire(GetPatientQuestionnaireRequest) returns (GetPatientQuestionnaireResponse);
  rpc StorePatientQuestionnaire(StorePatientQuestionnaireRequest) returns (StorePatientQuestionnaireResponse);
  rpc UpdatePatientQuestionnaire(UpdatePatientQuestionnaireRequest) returns (UpdatePatientQuestionnaireResponse);
  rpc DeletePatientQuestionnaire(DeletePatientQuestionnaireRequest) returns (DeletePatientQuestionnaireResponse);
} 