syntax = "proto3";

package proto.v1;

option go_package = "github.com/shukubota/empowercloud-server/gen/proto/v1;v1";

import "google/protobuf/timestamp.proto";

message SurveyResult {
  int64 id = 1;
  int64 clinic_id = 2;
  int64 survey_id = 3;
  string name = 4;
  string email = 5;
  string phone = 6;
  string address = 7;
  string customer_code = 8;
  SurveyResultMetadata metadata = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message SurveyResultMetadata {
  string survey_title = 1;
  string survey_description = 2;
  map<string, Answer> answers = 3;
}

message Answer {
  string id = 1;
  string type = 2;
  string text = 3;
  string description = 4;
  bool required = 5;
  repeated string options = 6;
  string answer = 7;
}

message CreateSurveyResultRequest {
  int64 clinic_id = 1;
  int64 survey_id = 2;
  string name = 3;
  string email = 4;
  string phone = 5;
  string address = 6;
  string customer_code = 7;
  SurveyResultMetadata metadata = 8;
}

message CreateSurveyResultResponse {
  int64 id = 1;
}

message GetSurveyResultRequest {
  int64 id = 1;
}

message GetSurveyResultResponse {
  SurveyResult survey_result = 1;
}

message UpdateSurveyResultRequest {
  int64 id = 1;
  int64 clinic_id = 2;
  int64 survey_id = 3;
  string name = 4;
  string email = 5;
  string phone = 6;
  string address = 7;
  string customer_code = 8;
  SurveyResultMetadata metadata = 9;
}

message UpdateSurveyResultResponse {}

message DeleteSurveyResultRequest {
  int64 id = 1;
}

message DeleteSurveyResultResponse {}

message ListSurveyResultsRequest {
  int32 page = 1;
  int32 page_size = 2;
  int64 clinic_id = 3;
  int64 survey_id = 4;
  string customer_code = 5;
}

message ListSurveyResultsResponse {
  repeated SurveyResult survey_results = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
}

service SurveyResultService {
  rpc CreateSurveyResult(CreateSurveyResultRequest) returns (CreateSurveyResultResponse);
  rpc GetSurveyResult(GetSurveyResultRequest) returns (GetSurveyResultResponse);
  rpc UpdateSurveyResult(UpdateSurveyResultRequest) returns (UpdateSurveyResultResponse);
  rpc DeleteSurveyResult(DeleteSurveyResultRequest) returns (DeleteSurveyResultResponse);
  rpc ListSurveyResults(ListSurveyResultsRequest) returns (ListSurveyResultsResponse);
} 